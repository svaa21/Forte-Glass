---
import Button from '@/components/ui/Button.astro'
import Left from '@/assets/icons/left.svg'
import Right from '@/assets/icons/right.svg'

const images = [
  { src: '/hero/hero-1.jpg', alt: 'Hero 1' },
  { src: '/hero/hero-2.jpg', alt: 'Hero 2' },
  { src: '/hero/hero-3.jpg', alt: 'Hero 3' },
  { src: '/hero/hero-4.jpg', alt: 'Hero 4' },
  { src: '/hero/hero-5.jpg', alt: 'Hero 5' }
]
---

<section
  class='relative h-[calc(100dvh-88px)] lg:h-[calc(100dvh-96px)] overflow-hidden text-white'
>
  {
    images.map((image, i) => (
      <img
        src={image.src}
        alt={image.alt}
        class='absolute inset-0 w-full h-full object-cover opacity-0 transition-opacity duration-1000 ease-in-out z-0'
        data-index={i}
      />
    ))
  }

  <div
    class='relative z-10 flex flex-col h-full px-4 container mx-auto text-center items-center justify-center gap-y-32'
  >
    <div class='flex w-full gap-x-20'>
      <button
        data-btn='prev'
        class='p-2 hover:bg-white/10 rounded hidden md:block transition-colors duration-300 ease-in-out cursor-pointer'
      >
        <Left class='w-12 h-12 scale-y-200 text-primary-800' />
      </button>
      <div
        class='flex flex-col items-center lg:items-start lg:text-left flex-1 text-neutral-50'
      >
        <h1 class='text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-bold mb-4 text-nowrap'>
          ELEVA <br /> TU VIAJE
        </h1>
        <p class='text-lg lg:text-xl mb-6 font-medium'>
          Todo lo que necesitas encuéntralo <br /> aquí en Forte Glass
        </p>
        <Button>VER MÁS</Button>
      </div>
      <button
        data-btn='next'
        class='p-2 hover:bg-white/10 rounded hidden md:block transition-colors duration-300 ease-in-out cursor-pointer'
      >
        <Right class='w-12 h-12 scale-y-200 text-primary-800' />
      </button>
    </div>
    <div class='gap-x-3 mt-6 hidden md:flex'>
      {
        images.map((_, i) => (
          <button
            class='w-3 h-3 rounded-full bg-white/30 hover:bg-white/70 transition-colors'
            data-indicator-desktop={i}
          />
        ))
      }
    </div>
    <div class='flex gap-x-4 md:hidden'>
      <button
        data-btn='prev'
        class='p-2 bg-white/20 hover:bg-white/40 rounded-full'
      >
        <Left class='w-6 h-6 text-primary-800' />
      </button>
      <div class='flex gap-x-3 mt-6'>
        {
          images.map((_, i) => (
            <button
              class='w-3 h-3 rounded-full bg-white/30 hover:bg-white/70 transition-colors'
              data-indicator-mobile={i}
            />
          ))
        }
      </div>
      <button
        data-btn='next'
        class='p-2 bg-white/20 hover:bg-white/40 rounded-full'
      >
        <Right class='w-6 h-6 text-primary-800' />
      </button>
    </div>
  </div>
</section>

<script>
  const images = document.querySelectorAll<HTMLImageElement>('[data-index]')
  const prevButtons =
    document.querySelectorAll<HTMLButtonElement>('[data-btn="prev"]')
  const nextButtons =
    document.querySelectorAll<HTMLButtonElement>('[data-btn="next"]')

  const indicatorsDesktop = document.querySelectorAll<HTMLButtonElement>(
    '[data-indicator-desktop]'
  )
  const indicatorsMobile = document.querySelectorAll<HTMLButtonElement>(
    '[data-indicator-mobile]'
  )

  let current = 0
  let interval: NodeJS.Timeout

  function showImage(index: number) {
    images.forEach((img, i) => {
      img.style.opacity = i === index ? '1' : '0'
    })

    indicatorsDesktop.forEach((indicator, i) => {
      indicator.classList.toggle('bg-white/70', i === index)
    })

    indicatorsMobile.forEach((indicator, i) => {
      indicator.classList.toggle('bg-white/70', i === index)
    })
  }

  function startCarousel() {
    interval = setInterval(() => {
      current = (current + 1) % images.length
      showImage(current)
    }, 10000)
  }

  function resetTimer() {
    clearInterval(interval)
    startCarousel()
  }

  prevButtons.forEach(button => {
    button.addEventListener('click', () => {
      current = (current - 1 + images.length) % images.length
      showImage(current)
      resetTimer()
    })
  })

  nextButtons.forEach(button => {
    button.addEventListener('click', () => {
      current = (current + 1) % images.length
      showImage(current)
      resetTimer()
    })
  })

  indicatorsDesktop.forEach((indicator, i) => {
    indicator.addEventListener('click', () => {
      current = i
      showImage(current)
      resetTimer()
    })
  })

  indicatorsMobile.forEach((indicator, i) => {
    indicator.addEventListener('click', () => {
      current = i
      showImage(current)
      resetTimer()
    })
  })

  showImage(current)
  startCarousel()
</script>
